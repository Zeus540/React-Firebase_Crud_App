{"version":3,"sources":["components/ContactForm.jsx","firebase.js","components/Contacts.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullName","mobile","email","address","useState","values","setValues","useEffect","currentId","RelatedPersonsObjects","handleInputChange","e","target","name","value","className","autoComplete","onSubmit","preventDefault","addOrEdit","placeholder","onChange","required","type","fireDb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","ref","Contacts","setCurrentId","setRelatedPersonsObjects","firebaseDb","child","on","snapshot","val","obj","push","err","console","log","set","Object","keys","map","key","onClick","id","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9816619b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ContactForm = (props) => {\n    const initialFieldValues = {\n        fullName: '',\n        mobile: '',\n        email: '',\n        address: ''\n    }\n\n    var [values, setValues] = useState(initialFieldValues)\n\n\n    useEffect(() => {\n        if (props.currentId === '')\n            setValues({ ...initialFieldValues })\n        else\n            setValues({\n                ...props.RelatedPersonsObjects[props.currentId]\n            })\n    }, [props.currentId, props.RelatedPersonsObjects])\n\n    const handleInputChange = e => {\n        var { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault()\n        props.addOrEdit(values);\n    }\n\n    return (\n        <form className=\"Form\" autoComplete=\"off\" onSubmit={handleFormSubmit}>\n            <div className=\"form-group input-group\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">\n                        <i className=\"fas fa-user\"></i>\n                    </div>\n                </div>\n                <input className=\"form-control\" name=\"fullName\" placeholder=\"Full Name\"\n                    value={values.fullName}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group input-group col-md-6\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">\n                            <i className=\"fas fa-mobile-alt\"></i>\n                        </div>\n                    </div>\n\n                    <input className=\"form-control\" name=\"mobile\" placeholder=\"Mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange} \n                        required\n                        type=\"number\"\n                    />\n                </div>\n                <div className=\"form-group input-group col-md-6\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">\n                            <i className=\"fas fa-envelope\"></i>\n                        </div>\n                    </div>\n                    <input className=\"form-control\" name=\"email\" placeholder=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        required\n                        type=\"email\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-group\">\n    \n               <textarea className=\"form-control\" name=\"address\" placeholder=\"Address\"\n                    value={values.address}\n                    onChange={handleInputChange}\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input type=\"submit\" value={props.currentId === \"\" ? \"Save\" : \"Update\"} className=\"btn btn-primary btn-block\" />\n            </div>\n        </form>\n    );\n}\n\nexport default ContactForm;","import firebase from 'firebase/app'\nimport 'firebase/database'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB9qlWdNkD_BnYqEe6nv-NU1F67C5c3sNs\",\n  authDomain: \"react-crud-916fd.firebaseapp.com\",\n  projectId: \"react-crud-916fd\",\n  storageBucket: \"react-crud-916fd.appspot.com\",\n  messagingSenderId: \"249856415759\",\n  appId: \"1:249856415759:web:e9c1ec5e5affc62a406b7a\"\n};\n\n// Initialize Firebase\n\nvar fireDb = firebase.initializeApp(firebaseConfig);\n\nexport default fireDb.database().ref();\n","import React, { useState, useEffect } from 'react';\nimport ContactForm from \"./ContactForm\";\nimport firebaseDb from \"../firebase\";\n\nconst Contacts = () => {\n\n\tvar [currentId, setCurrentId] = useState('');\n    var [RelatedPersonsObjects, setRelatedPersonsObjects] = useState({})\n\n    //Once components load complete\n    useEffect(() => {\n        firebaseDb.child('RelatedPersons').on('value', snapshot => {\n            if (snapshot.val() != null) {\n                setRelatedPersonsObjects({\n                    ...snapshot.val()\n                });\n            }\n        })\n    }, [])\n\n\n    const addOrEdit = (obj) => {\n      if (currentId === '')\n          firebaseDb.child('RelatedPersons').push(\n              obj,\n              err => {\n                  if (err)\n                      console.log(err)\n                  else\n                      setCurrentId('')\n              })\n      else\n          firebaseDb.child(`RelatedPersons/${currentId}`).set(\n              obj,\n              err => {\n                  if (err)\n                      console.log(err)\n                  else\n                      setCurrentId('')\n              })\n  }\n\n  const onDelete = id => {\n    if (window.confirm('Are you sure to delete this record?')) {\n        firebaseDb.child(`RelatedPersons/${id}`).remove(\n            err => {\n                if (err)\n                    console.log(err)\n                else\n                    setCurrentId('')\n            })\n    }\n}\n\n\n  return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <h1 className=\"display-4 text-center\">Contact Manager</h1>\n                </div>\n            </div>\n            <div className=\"Flex \">\n                    <ContactForm {...({ currentId, RelatedPersonsObjects, addOrEdit })} ></ContactForm>\n                </div>\n                <div className=\"Flex \">\n              \n                {\n                                Object.keys(RelatedPersonsObjects).map((key) => (\n                                 \n                                    <div className=\"Card\" key={key}>\n                                      <h5>NAME</h5>\n                                        <p>{RelatedPersonsObjects[key].fullName}</p>\n                                        <h5>MOBILE</h5>\n                                        <p>{RelatedPersonsObjects[key].mobile}</p>\n                                        <h5>EMAIL</h5>\n                                        <p>{RelatedPersonsObjects[key].email}</p>\n                                        <h5>ADDRESS</h5>\n                                        <p>{RelatedPersonsObjects[key].address}</p>\n                                       \n                                            <button className=\"btn text-primary\" onClick={() => { setCurrentId(key) }}>\n                                                <i className=\"fas fa-pencil-alt\"></i>\n                                            </button>\n                                            <button className=\"btn text-danger\" onClick={() => { onDelete(key) }}>\n                                                <i className=\"far fa-trash-alt\"></i>\n                                            </button>\n                                        \n                                    </div>\n                                 \n                                ))\n                            }\n                          \n                             </div>\n        </>\n    );\n}\n\nexport default Contacts;","import './scss/App.scss';\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport Contacts from './components/Contacts.jsx'\n\nfunction App() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 offset-md-2\">\n        <Contacts/>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}